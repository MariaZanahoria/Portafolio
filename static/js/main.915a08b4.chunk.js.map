{"version":3,"sources":["Components/Navbar.js","Components/Projects.js","Components/Section.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","scrollToTop","scroll","className","id","src","alt","title","onClick","this","activeClass","to","spy","smooth","offset","duration","Component","Projects","href","target","AboutMe","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sTAGqBA,E,2MACnBC,YAAc,WACZC,gBAAOD,e,wEAIP,OACI,yBAAKE,UAAU,MAAMC,GAAG,UACtB,yBAAKD,UAAU,eACb,yBACEE,IAAI,wDACJF,UAAU,WACVG,IAAI,OACJC,MAAM,SACNC,QAASC,KAAKR,cAGhB,wBAAIE,UAAU,aACZ,wBAAIA,UAAU,YACZ,kBAAC,OAAD,CACEO,YAAY,SACZC,GAAG,UACHJ,MAAM,iBACNK,KAAK,EACLC,QAAQ,EACRC,QAAS,GACTC,SAAU,KAPZ,aAYF,wBAAIZ,UAAU,YACZ,kBAAC,OAAD,CACEO,YAAY,SACZC,GAAG,WACHJ,MAAM,cACNK,KAAK,EACLC,QAAQ,EACRC,QAAS,GACTC,SAAU,KAPZ,cAYF,wBAAIZ,UAAU,YACZ,kBAAC,OAAD,CACEO,YAAY,SACZC,GAAG,WACHC,KAAK,EACLC,QAAQ,EACRC,QAAS,GACTC,SAAU,KANZ,qB,GA7CoBC,a,MCArB,SAASC,EAAT,GAA2B,IAAPb,EAAM,EAANA,GACjC,OACE,yBAAKD,UAAU,mBACb,yBAAKA,UAAU,UAAUC,GAAIA,GAC3B,6BACE,wBAAID,UAAU,SAAd,aAEA,wBAAIA,UAAU,YAAd,eACA,+BACE,4BACE,4BACE,uBACEe,KAAK,yCACLC,OAAO,UAEP,yBACEd,IAAI,2CACJF,UAAU,cACVG,IAAI,cACJC,MAAM,gBACL,MAGP,4BACE,uBAAGJ,UAAU,cAAb,8sBAmBR,6BACE,wBAAIA,UAAU,YAAd,aACA,+BACE,4BACE,4BACE,uBACEe,KAAK,yCACLC,OAAO,UAEP,yBACEd,IAAI,2CACJF,UAAU,cACVG,IAAI,YACJC,MAAM,cACL,MAGP,4BACE,uBAAGJ,UAAU,cAAb,onBAkBR,6BACM,wBAAIA,UAAU,YAAd,mBACF,+BACA,4BACE,4BACE,uBACEe,KAAK,yCACLC,OAAO,UAEP,yBACEd,IAAI,2CACJF,UAAU,cACVG,IAAI,kBACJC,MAAM,oBACL,MAGP,4BACE,uBAAGJ,UAAU,cAAb,22BCjGD,SAASiB,EAAT,GAA0B,IAAPhB,EAAM,EAANA,GAChC,OACE,yBAAKD,UAAU,mBACb,yBAAKC,GAAIA,GACP,6BACE,wBAAID,UAAU,SAAd,kBACA,+BACE,4BACE,4BACE,yBACEE,IAAI,mDACJF,UAAU,KACVG,IAAI,KACJC,MAAM,QAGV,4BACE,+a,ICkBDc,E,iLA/BX,OACE,yBAAKlB,UAAU,OACb,kBAAC,EAAD,MACA,yBACAE,IAAI,oCACJF,UAAU,YACVG,IAAI,OACJC,MAAM,SACN,kBAAC,EAAD,CACEA,MAAM,UACNH,GAAG,YAEL,kBAACa,EAAD,CACEV,MAAM,WACNH,GAAG,kB,GAhBKY,aCOEM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.915a08b4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link, animateScroll as scroll } from \"react-scroll\";\r\n\r\nexport default class Navbar extends Component {\r\n  scrollToTop = () => {\r\n    scroll.scrollToTop();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <nav className=\"nav\" id=\"navbar\">\r\n          <div className=\"nav-content\">\r\n            <img\r\n              src=\"https://i.ibb.co/dJZT5QL/received-493921941466056.png\"\r\n              className=\"nav-logo\"\r\n              alt=\"Logo\"\r\n              title=\"Inicio\"\r\n              onClick={this.scrollToTop}\r\n            />\r\n\r\n            <ul className=\"nav-items\">\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  activeClass=\"active\"\r\n                  to=\"AboutMe\"\r\n                  title=\"Descripción\"\r\n                  spy={true}\r\n                  smooth={true}\r\n                  offset={-70}\r\n                  duration={500}\r\n                >\r\n                  Sobre mi\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  activeClass=\"active\"\r\n                  to=\"Projects\"\r\n                  title=\"Experiencia\"\r\n                  spy={true}\r\n                  smooth={true}\r\n                  offset={-70}\r\n                  duration={500}\r\n                >\r\n                  Proyectos\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  activeClass=\"active\"\r\n                  to=\"section3\"\r\n                  spy={true}\r\n                  smooth={true}\r\n                  offset={-70}\r\n                  duration={500}\r\n                >\r\n                  Section 3\r\n                </Link>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link\r\n                  activeClass=\"active\"\r\n                  to=\"section4\"\r\n                  spy={true}\r\n                  smooth={true}\r\n                  offset={-70}\r\n                  duration={500}\r\n                >\r\n                  Section 4\r\n                </Link>\r\n              </li> */}\r\n            </ul>\r\n          </div>\r\n        </nav>        \r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./MainPage.css\";\r\n\r\nexport default function Projects({ id }) {\r\n  return (\r\n    <div className=\"project-content\">\r\n      <div className=\"content\" id={id}>\r\n        <div>\r\n          <h1 className=\"title\">Proyectos</h1>\r\n\r\n          <h2 className=\"subtitle\">Churrolatte</h2>\r\n          <table>\r\n            <tr>\r\n              <td>\r\n                <a\r\n                  href=\"https://26erika.github.io/churrolatte/\"\r\n                  target=\"_blank\"\r\n                >\r\n                  <img\r\n                    src=\"https://i.ibb.co/SNpdcpC/Churrolatte.png\"\r\n                    className=\"churrolatte\"\r\n                    alt=\"Churrolatte\"\r\n                    title=\"Churrolatte\"\r\n                  />{\" \"}\r\n                </a>\r\n              </td>\r\n              <td>\r\n                <p className=\"textDesing\">\r\n                  Webapp realizada en equipo para automatizar el sistema de\r\n                  comandas de una churreria, trabajamos el proyecto en dos\r\n                  equipos conformados por Back-end y Front-end, trabajé con mi\r\n                  compañera Erika en el Front-end utilizando HTML, JS, React y\r\n                  CSS3, la interfaz esta enfocada en dos usuarios, \\\"el mesero\\\"\r\n                  quien puede seleccionar una mesa, acceder al menú, generar\r\n                  pedidos, enviar los pedidos al cocinero y ver el estatus del\r\n                  pedido, \\\"el cocinero\\\" puede acceder al pedido enviado por el\r\n                  mesero y modificar su estado una vez que este lista la\r\n                  comanda, los accesos a la base de datos se realizan mediante\r\n                  un token que se envia en cada llamada al Back-end, esta\r\n                  diseñada para utilizarse en una tablet.\r\n                </p>\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n\r\n        <div>\r\n          <h2 className=\"subtitle\">Sholofood</h2>\r\n          <table>\r\n            <tr>\r\n              <td>\r\n                <a\r\n                  href=\"https://26erika.github.io/churrolatte/\"\r\n                  target=\"_blank\"\r\n                >\r\n                  <img\r\n                    src=\"https://i.ibb.co/SNpdcpC/Churrolatte.png\"\r\n                    className=\"churrolatte\"\r\n                    alt=\"Sholofood\"\r\n                    title=\"Sholofood\"\r\n                  />{\" \"}\r\n                </a>\r\n              </td>\r\n              <td>\r\n                <p className=\"textDesing\">\r\n                  Webapp diseñada como red social que ayuda a difundir\r\n                  información de negocios informales entre los usuarios,\r\n                  desarrollada en equipo con mi compañera Diana Gonzalez,\r\n                  utilizamos HTML, JS, Firebase como base de datos para guardar\r\n                  las publicaciones de los usuarios y sus registros, los\r\n                  usuarios pueden registrarse con gmail, facebook y correo\r\n                  electronico, cuenta con un menu interactivo en el que el\r\n                  usuario puede realizar un post, visualizarlo en el muro y\r\n                  acceder a su perfil donde podra ver su foto y datos,\r\n                  utilizamos Materialize para el diseño de la interfaz el cual\r\n                  es responsivo para diversos dispositivos.\r\n                </p>\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n\r\n        <div>\r\n              <h2 className=\"subtitle\">Check-inLoveGDL</h2>\r\n            <table>\r\n            <tr>\r\n              <td>\r\n                <a\r\n                  href=\"https://26erika.github.io/churrolatte/\"\r\n                  target=\"_blank\"\r\n                >\r\n                  <img\r\n                    src=\"https://i.ibb.co/SNpdcpC/Churrolatte.png\"\r\n                    className=\"churrolatte\"\r\n                    alt=\"Check-inLoveGDL\"\r\n                    title=\"Check-inLoveGDL\"\r\n                  />{\" \"}\r\n                </a>\r\n              </td>\r\n              <td>\r\n                <p className=\"textDesing\">\r\n                  Proyecto Ganador del 3° lugar del Talent Hackaton con el\r\n                  equipo \"Amazonas\" del track \\\"Revive el corazon de tu ciudad\\\"\r\n                  realizado en Junio 28 \\\"\\\\2019\\\" Webapp inspirada en los tours\r\n                  desconocidos en la ciudad de guadalajara, realizamos la\r\n                  integración de todas las paginas existentes del gobierno que\r\n                  ayudan al turista a conocer la ciudad, buscamos impulsar por\r\n                  medio de un convenio con la dependencia de cultura que\r\n                  proporcione descuentos y boletos a los usuarios que completen\r\n                  visitas y hagan check-in en nuestra pagina de los sitios que\r\n                  promovamos en la interfaz con capsulas (videos), diseñamos un\r\n                  sistema de puntos que se asignaran por cada check-in que el\r\n                  usuario realice, podra cangear los puntos por boletos y\r\n                  descuentos, desarrollamos este proyecto con HTML, JS y CSS3 y\r\n                  es responsivo para visualizarse en dispositivos moviles y\r\n                  computadoras.\r\n                </p>\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./MainPage.css\";\r\n\r\nexport default function AboutMe({ id }) {\r\n  return (\r\n    <div className=\"section-content\">\r\n      <div id={id}>\r\n        <div>\r\n          <h1 className=\"title\">Isela Carrillo</h1>\r\n          <table>\r\n            <tr>\r\n              <td>\r\n                <img\r\n                  src=\"https://i.ibb.co/z2wLp6b/IMG-20190710-222137.jpg\"\r\n                  className=\"me\"\r\n                  alt=\"Me\"\r\n                  title=\"Me\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <p>\r\n                  Me gustan los desafíos, encontrar sitios a visitar, disfruto\r\n                  probar nuevas actividades (tecnología, deporte, arte, belleza,\r\n                  ciencia, etc) para explotar mis talentos, descubrir aspectos\r\n                  de mí que no conocía y adquirir nuevas habilidades. Me adapto\r\n                  a lo que la vida me presenta y sé hacer frente a los problemas\r\n                  y retos para crecer como persona, me atrevo a crear mi propio\r\n                  camino!\r\n                </p>\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Navbar from \"./Components/Navbar\";\r\nimport Projects from \"./Components/Projects\"\r\nimport SobreMi from \"./Components/Section\";\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Navbar />\r\n        <img\r\n        src=\"https://i.ibb.co/GWSLP5M/hola.jpg\"\r\n        className=\"headerTop\"\r\n        alt=\"Main\"\r\n        title=\"Main\"/>\r\n        <SobreMi\r\n          title=\"AboutMe\"\r\n          id=\"AboutMe\"\r\n        />\r\n        <Projects\r\n          title=\"Projects\"\r\n          id=\"Projects\"\r\n        />\r\n        {/* <Section\r\n          title=\"Section 3\"\r\n          dark={true}\r\n          id=\"section3\"\r\n        />\r\n        <Section\r\n          title=\"Section 4\"\r\n          dark={false}\r\n          id=\"section4\"\r\n        /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}